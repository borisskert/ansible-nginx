---
- name: should create upstream config file
  copy:
    dest: /srv/nginx/conf.d/upstreams.conf
    content: |
      upstream apache {
        server 172.17.0.1:10080;
      }
  register: upstreams_conf_file
  failed_when: upstreams_conf_file.changed

- name: should create apache config file
  copy:
    dest: /srv/nginx/conf.d/apache.conf
    content: |
      server {
        listen 80;
        listen [::]:80;
        server_name my.http.server;
        location / {
          proxy_pass http://apache/;
          include ./rules/proxy.conf;
        }
        location ~ /.well-known {
          root /var/www/html;
          allow all;
        }
      }
  register: apache_conf_file
  failed_when: apache_conf_file.changed

- name: should create https config file
  copy:
    dest: /srv/nginx/conf.d/https.conf
    content: |
      server {
        listen 80;
        listen [::]:80;
        server_name my.https.server;
        return 301 https://$server_name$request_uri;
      }
      server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name my.https.server;
        ssl_certificate ./certs/live/my.https.server/fullchain.pem;
        ssl_certificate_key ./certs/live/my.https.server/privkey.pem;
        ssl_trusted_certificate ./certs/live/my.https.server/chain.pem;
        include ./rules/ssl.conf;
        location / {
          proxy_pass http://apache/;
          include ./rules/proxy.conf;
        }
        location ~ /.well-known {
          root /var/www/html;
          allow all;
        }
      }
  register: https_conf_file
  failed_when: https_conf_file.changed

- name: should create ssl rules file
  copy:
    dest: /srv/nginx/rules/ssl.conf
    content: "ssl_protocols TLSv1.3 TLSv1.2;

      ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:\
      EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:\
      DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;

      ssl_prefer_server_ciphers on;

      ssl_dhparam ./ssl/dh_param_1024.pem;

      ssl_ecdh_curve secp384r1;

      add_header Strict-Transport-Security 'max-age=31536000; \
      includeSubDomains; preload' always;

      ssl_stapling on;

      ssl_stapling_verify on;

      ssl_session_cache shared:TLS:2m;

      ssl_buffer_size 4k;

      ssl_session_timeout 10m;

      ssl_session_tickets on;

      ssl_session_ticket_key ./ssl/nginx_ticketkey;

      "
  register: ssl_rules_file
  failed_when: ssl_rules_file.changed

- name: should create proxy rules file
  copy:
    dest: /srv/nginx/rules/proxy.conf
    content: "proxy_set_header Host $http_host;

      proxy_set_header X-Real-IP $remote_addr;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_cookie_path / \"/; secure\";

      proxy_buffering off;

      proxy_request_buffering off;

      "
  register: proxy_rules_file
  failed_when: proxy_rules_file.changed

- name: Should have pulled image
  docker_image:
    name: nginx:1.17.9-alpine
    source: pull
  register: nginx_image
  failed_when: nginx_image.changed

- name: Should have created volume
  file:
    path: /srv/nginx
    state: directory
  register: nginx_volume
  failed_when: nginx_volume.changed

---
- name: Converge
  hosts: all
  become: true

  roles:
    - role: ansible-nginx
      nginx_image_version: 1.17.10-alpine
      nginx_volume: /srv/nginx
      nginx_http_port: 8080
      nginx_https_port: 8443
      nginx_clear_dh_parameter: false
      nginx_dh_parameter_bits: 1024
      nginx_ticketkey_enabled: true
      nginx_rules:
        ssl:
          ssl_protocols: TLSv1.3 TLSv1.2
          ssl_ciphers: "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:\
            EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:\
            ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:\
            !aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS"
          ssl_prefer_server_ciphers: 'on'
          ssl_dhparam: ./ssl/{{ nginx_dh_parameter_filename }}
          ssl_ecdh_curve: secp384r1
          add_header: "Strict-Transport-Security 'max-age=31536000; \
            includeSubDomains; preload' always"
          ssl_stapling: 'on'
          ssl_stapling_verify: 'on'
          ssl_session_cache: shared:TLS:2m
          ssl_buffer_size: 4k
          ssl_session_timeout: 10m
          ssl_session_tickets: 'on'
          ssl_session_ticket_key: ./ssl/{{ nginx_ticketkey_filename }}
        proxy:
          proxy_set_header:
            - Host $http_host
            - X-Real-IP $remote_addr
            - X-Forwarded-For $proxy_add_x_forwarded_for
            - X-Forwarded-Proto $scheme
          proxy_cookie_path: '/ "/; secure"'
          proxy_buffering: 'off'
          proxy_request_buffering: 'off'
      nginx_upstreams:
        apache: 172.17.0.1:10080
      nginx_configs:
        apache:
          servers:
            - options:
                listen:
                  - '80'
                  - '[::]:80'
                server_name: my.http.server
              locations:
                '/':
                  proxy_pass: http://apache/
                  include: ./rules/proxy.conf
                '~ /.well-known':
                  root: /var/www/html
                  allow: all
            - options:
                listen:
                  - '443 ssl http2'
                  - '[::]:443 ssl http2'
                server_name: my.http.server
                ssl_certificate: ./certs/live/my.http.server/fullchain.pem
                ssl_certificate_key: ./certs/live/my.http.server/privkey.pem
                ssl_trusted_certificate: ./certs/live/my.http.server/chain.pem
                include: ./rules/ssl.conf
              locations:
                '/':
                  proxy_pass: http://gitlabpages
                  include: ./rules/proxy.conf
                '~ /.well-known':
                  root: /var/www/html
                  allow: all
              disabled: true
        https:
          servers:
            - options:
                listen:
                  - '80'
                  - '[::]:80'
                server_name: my.https.server
                return: 301 https://$server_name$request_uri
            - options:
                listen:
                  - '443 ssl http2'
                  - '[::]:443 ssl http2'
                server_name: my.https.server
                ssl_certificate: ./certs/live/my.https.server/fullchain.pem
                ssl_certificate_key: ./certs/live/my.https.server/privkey.pem
                ssl_trusted_certificate: ./certs/live/my.https.server/chain.pem
                include: ./rules/ssl.conf
              locations:
                '/':
                  proxy_pass: http://apache/
                  include: ./rules/proxy.conf
                '/video/':
                  proxy_pass: http://apache/
                  include: ./rules/proxy.conf
                  mp4:
                  mp4_buffer_size: 1m
                  mp4_max_buffer_size: 5m
                '~ /.well-known':
                  root: /var/www/html
                  allow: all

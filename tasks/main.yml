---
- name: pull image
  docker_image:
    name: "{{image_name}}:{{image_version}}"
    source: pull
  register: dockerimage

- name: Create systemd unit file
  template:
    src: nginx.systemd.j2
    dest: "/etc/systemd/system/{{systemd_service_name}}.service"
    owner: root
    group: root
    mode: 0554
  register: nginx_service

- name: Create ticketkey renew service
  template:
    src: nginx.ticketkey_renew.systemd.j2
    dest: "/etc/systemd/system/{{ticketkey_renew_service_name}}.service"
    owner: root
    group: root
    mode: 0554
  register: nginx_ticketkey_renew_service

- name: Create ticketkey renew timer
  template:
    src: nginx.ticketkey_renew.timer.systemd.j2
    dest: "/etc/systemd/system/{{ticketkey_renew_service_name}}.timer"
    owner: root
    group: root
    mode: 0554
  register: nginx_ticketkey_renew_service

- name: Create reloader service
  template:
    src: nginx.reload.systemd.j2
    dest: "/etc/systemd/system/{{reload_service_name}}.service"
    owner: root
    group: root
    mode: 0554
  register: nginx_reload_service

- include: create_volumes.yml

- name: template ssl rules
  template:
    src: rules/ssl_parameters.conf.j2
    dest: "{{rules_folder}}/{{ssl_parameters_file}}"
  register: ssl_rules

- name: template reverse proxy rules
  template:
    src: rules/proxy_parameters.conf.j2
    dest: "{{rules_folder}}/{{proxy_parameters_file}}"
  register: proxy_rules

- name: template site config
  template:
    src: conf.d/site.conf.j2
    dest: "{{conf_folder}}/{{item.key}}.conf"
  with_dict: "{{ configs }}"
  register: site_config

- include: create_dh_parameter.yml

- include: create_ticketkey.yml

- name: Setup logrotate config
  template:
    src: logrotate.j2
    dest: "{{logrotate_config}}"

- name: Reload systemd
  command: systemctl daemon-reload
  when: nginx_service.changed or nginx_reload_service.changed or nginx_ticketkey_renew_service.changed

- name: Restart service
  service:
    name: nginx
    state: restarted
    enabled: yes
  when: dockerimage.changed or nginx_service.changed
  register: nginx_restart

- name: Setup ticketkey renew service timer
  systemd:
    name: "{{ticketkey_renew_service_name}}.timer"
    state: "{{ 'started' if ticketkey_enabled else 'stopped' | default('stopped') }}"
    enabled: yes

- name: Start service (if necessary)
  service:
    name: nginx
    state: started
    enabled: yes
  register: nginx_start

- name: Reload service (needed for eventually config changes)
  service:
    name: "{{reload_service_name}}"
    state: started
  when: >
    not(nginx_restart.changed or nginx_start.changed)
    and (ssl_rules.changed or proxy_rules.changed
    or site_config.changed or dh_parameter.changed)
